(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{325:function(e,n,t){"use strict";t.r(n);var a=t(5),r=Object(a.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h3",{attrs:{id:"json方法深拷贝"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#json方法深拷贝"}},[e._v("#")]),e._v(" JSON方法深拷贝")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('let obj = JSON.parse(\'{"a": "hello", "b": "world"}\')\nlet str = JSON.stringify(obj)\n// console.log(obj)\n')])])]),n("h3",{attrs:{id:"递归深拷贝"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#递归深拷贝"}},[e._v("#")]),e._v(" 递归深拷贝")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("/**\n * 类型判断\n * @param {*} data 数据源\n * **/ \n\nlet checkType = data => {\n    return Object.prototype.toString.call(data).slice(8,-1);\n}\n\n/**\n * 深拷贝\n * @param {*} data 数据源\n * **/ \n\nlet deepClone = data => {\n\n    let rest = null;\n\n    //  判断数据类型，分给容器不同的数据类型\n    if(checkType(data) === 'Array') {\n        rest = [];\n    }else if(checkType(data) === 'Object') {\n        rest = {};\n    } else {\n        return data;\n    }\n\n    // 循环递归，复制给容器\n\n    for( let key in data ) {\n\n        let val = data[key];\n\n        if(checkType(val) === 'Array' || checkType(val) === 'Object') {\n            rest[key] = deepClone(val);\n        }else {\n            rest[key] = val;\n        }\n    }\n\n    return rest;\n\n}\n\nlet arr = [1,2,3,4,5,6,{'num':7}];\n\nlet obj = {\n    name: 'xiecheng',\n    hobby: ['coding', 'eating']\n};\n\nlet deepCloneArr = deepClone(arr);\n")])])])])}),[],!1,null,null,null);n.default=r.exports}}]);