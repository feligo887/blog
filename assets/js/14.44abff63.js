(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{318:function(n,t,a){"use strict";a.r(t);var s=a(4),e=Object(s.a)({},(function(){var n=this,t=n._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h4",{attrs:{id:"shu云面试题-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shu云面试题-3"}},[n._v("#")]),n._v(" shu云面试题-3")]),n._v(" "),t("p",[n._v("写出下列代码的结束时间")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("    function wait(val) {\n        return new Promise( res => setTimeout(() => {\n            console.log(val);\n            res(val);\n        }, 10 * 1000));\n    }\n    async function main() {\n\n        console.time('第一组');\n        const x = await wait('1.1');\n        const y = await wait('1.2');\n        const z = await wait('1.3');\n        console.timeEnd('第一组'); // 结束时间\n\n        console.time('第二组');\n        const x1 = wait('2.1');\n        const y1 = wait('2.2');\n        const z1 = wait('2.3');\n        await x1;\n        await y1;\n        await z1;\n        console.timeEnd('第二组'); //  结束时间\n\n        console.time('第三组');\n        const x2 = wait('3.1');\n        const y2 = wait('3.2');\n        const z2 = wait('3.3');\n        x1,y1,z1;\n        console.timeEnd('第三组'); //  结束时间\n    }\n    main();\n\n")])])]),t("p",[n._v("这个题目考验的是async和await的运用。")]),n._v(" "),t("p",[n._v("async函数一定会返回一个 promise 对象。如果一个 async 函数的返回值看起来不是 promise，那么它将会被隐式地包装在一个 promise 中。")]),n._v(" "),t("ol",[t("li",[n._v("第一组. 就是传统的Promise的处理方式，x、y、z被yeid暂停事件队列执行，让x、y、z按照先后顺序依次执行。也就是在每个函数中停留了 1秒，一共三秒。")]),n._v(" "),t("li",[n._v("第三组. 只是返回Promise.resolve()方法，并没有被加入蛋钱执行队列，而是加入事件队列宏任务当中。按照setTimeout()的文档，最少执行时间，这里应该用时 4毫秒")]),n._v(" "),t("li",[n._v("第二组.  x1、y1、z1 同时被创造，同时被执行await，就用该去三个中执行时间最长的那个，也就是 1秒，而不是 3秒。（这里有点雷同于Promise.all([x1(), y1(), z1()]))。")])]),n._v(" "),t("h4",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[n._v("#")]),n._v(" 参考资料：")]),n._v(" "),t("blockquote",[t("p",[n._v("https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/async_function")])])])}),[],!1,null,null,null);t.default=e.exports}}]);